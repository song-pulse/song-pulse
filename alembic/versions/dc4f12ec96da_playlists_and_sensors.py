"""playlists and sensors

Revision ID: dc4f12ec96da
Revises: de7fb9adaee7
Create Date: 2020-04-09 14:26:33.947946

"""
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'dc4f12ec96da'
down_revision = 'de7fb9adaee7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('participant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_participant_id'), 'participant', ['id'], unique=False)
    op.create_table('sensor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sensor_id'), 'sensor', ['id'], unique=False)
    op.create_table('playlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_playlist_id'), 'playlist', ['id'], unique=False)
    op.create_table('recording',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=True),
    sa.Column('total_time', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['participant_id'], ['participant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recording_id'), 'recording', ['id'], unique=False)
    op.create_table('run',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recording_id', sa.Integer(), nullable=True),
    sa.Column('current_time', sa.BigInteger(), nullable=True),
    sa.Column('is_running', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['recording_id'], ['recording.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_run_id'), 'run', ['id'], unique=False)
    op.create_table('song',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlist.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_song_id'), 'song', ['id'], unique=False)
    op.create_table('file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recording_id', sa.Integer(), nullable=True),
    sa.Column('sensor_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['recording_id'], ['recording.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_id'), 'file', ['id'], unique=False)
    op.create_table('value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.BigInteger(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_value_id'), 'value', ['id'], unique=False)
    op.create_table('result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.BigInteger(), nullable=True),
    sa.Column('song_id', sa.Integer(), nullable=True),
    sa.Column('verdict', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_result_id'), 'result', ['id'], unique=False)

    op.drop_index('ix_results_id', table_name='results')
    op.drop_table('results')
    op.drop_index('ix_values_id', table_name='values')
    op.drop_table('values')
    op.drop_index('ix_songs_id', table_name='songs')
    op.drop_table('songs')
    op.drop_index('ix_runs_id', table_name='runs')
    op.drop_table('runs')
    op.drop_index('ix_recordings_id', table_name='recordings')
    op.drop_table('recordings')
    op.drop_index('ix_participants_id', table_name='participants')
    op.drop_table('participants')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('values',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('recording_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['recording_id'], ['recordings.id'], name='values_recording_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='values_pkey')
    )
    op.create_index('ix_values_id', 'values', ['id'], unique=False)
    op.create_table('songs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('songs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('participant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], name='songs_participant_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='songs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_songs_id', 'songs', ['id'], unique=False)
    op.create_table('runs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('runs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('recording_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_time', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('is_running', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['recording_id'], ['recordings.id'], name='runs_recording_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='runs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_runs_id', 'runs', ['id'], unique=False)
    op.create_table('recordings',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('recordings_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('participant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_time', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], name='recordings_participant_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='recordings_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_recordings_id', 'recordings', ['id'], unique=False)
    op.create_table('results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('verdict', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('song_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], name='results_run_id_fkey'),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], name='results_song_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='results_pkey')
    )
    op.create_index('ix_results_id', 'results', ['id'], unique=False)
    op.create_table('participants',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='participants_pkey')
    )
    op.create_index('ix_participants_id', 'participants', ['id'], unique=False)

    op.drop_index(op.f('ix_result_id'), table_name='result')
    op.drop_table('result')
    op.drop_index(op.f('ix_song_id'), table_name='song')
    op.drop_table('song')
    op.drop_index(op.f('ix_playlist_id'), table_name='playlist')
    op.drop_table('playlist')
    op.drop_index(op.f('ix_file_id'), table_name='file')
    op.drop_table('file')
    op.drop_index(op.f('ix_value_id'), table_name='value')
    op.drop_table('value')
    op.drop_index(op.f('ix_sensor_id'), table_name='sensor')
    op.drop_table('sensor')
    op.drop_index(op.f('ix_run_id'), table_name='run')
    op.drop_table('run')
    op.drop_index(op.f('ix_recording_id'), table_name='recording')
    op.drop_table('recording')
    op.drop_index(op.f('ix_participant_id'), table_name='participant')
    op.drop_table('participant')
    # ### end Alembic commands ###
