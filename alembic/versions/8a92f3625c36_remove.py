"""remove

Revision ID: 8a92f3625c36
Revises: 96d5888b759f
Create Date: 2020-08-18 14:37:45.625362

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8a92f3625c36'
down_revision = '96d5888b759f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_baseline_id', table_name='baseline')
    op.drop_table('baseline')
    op.drop_index('ix_qtable_id', table_name='qtable')
    op.drop_index('ix_qtable_participant_id', table_name='qtable')
    op.drop_table('qtable')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('qtable',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('participant_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('data', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['participant_id'], ['participant.id'], name='qtable_participant_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='qtable_pkey')
                    )
    op.create_index('ix_qtable_participant_id', 'qtable', ['participant_id'], unique=False)
    op.create_index('ix_qtable_id', 'qtable', ['id'], unique=False)
    op.create_table('baseline',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('sensor_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('participant_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('baseline', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('counter', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['participant_id'], ['participant.id'],
                                            name='baseline_participant_id_fkey'),
                    sa.ForeignKeyConstraint(['sensor_id'], ['sensor.id'], name='baseline_sensor_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='baseline_pkey')
                    )
    op.create_index('ix_baseline_id', 'baseline', ['id'], unique=False)
    # ### end Alembic commands ###
