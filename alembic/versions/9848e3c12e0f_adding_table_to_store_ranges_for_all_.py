"""adding table to store ranges for all the values

Revision ID: 9848e3c12e0f
Revises: 54745d110fb6
Create Date: 2020-07-21 10:56:30.622902

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
from sqlalchemy.dialects import postgresql

revision = '9848e3c12e0f'
down_revision = '54745d110fb6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('range',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('counter', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_range_id'), 'range', ['id'], unique=False)

    op.drop_column('baseline', 'min_value')
    op.drop_column('baseline', 'max_value')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('baseline',
                  sa.Column('max_value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('baseline',
                  sa.Column('min_value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))

    op.drop_index(op.f('ix_range_id'), table_name='range')
    op.drop_table('range')
    # ### end Alembic commands ###
